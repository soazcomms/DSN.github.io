name: Process DSN data

on:
  workflow_dispatch:

jobs:
  process_and_upload:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set Up Dependencies
      - name: Set Up Dependencies
        run: |
          echo "Installing dependencies..."
          sudo apt-get update
          sudo apt-get install -y curl jq

      # Step 3: Install Influx CLI
      - name: Install Influx CLI
        run: |
          echo "Installing InfluxDB CLI..."
          curl -sL https://dl.influxdata.com/influxdb/releases/influxdb2-client-2.7.5-linux-amd64.tar.gz -o influxdb2-client.tar.gz
          tar -xzf influxdb2-client.tar.gz
          sudo mv influx /usr/local/bin/
          influx version

      # Step 4: Start InfluxDB
      - name: Start InfluxDB
        run: |
          echo "Starting InfluxDB..."
          docker run -d --name influxdb -p 8086:8086 influxdb:2.0
          echo "Waiting for InfluxDB to be ready..."
          until curl -s http://localhost:8086/ping; do sleep 1; done

      # Step 5: Setup InfluxDB Configuration
      - name: Set up InfluxDB Configuration
        env:
          INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
        run: |
          echo "Setting up InfluxDB config"
          influx config create -a -n "DSN" -u https://us-east-1-1.aws.cloud2.influxdata.com -t $INFLUX_TOKEN -o "DSN"

      # Step 6: Check for CSV Files and Upload to InfluxDB Cloud
      - name: Upload CSV Files to InfluxDB Cloud
        env:
          INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
        run: |
          CURRENT_DATE=$(date '+%Y-%m-%d %H:%M:%S')
          ORIG_FILES=$(ls -1 $(pwd)/DSNdata/NEW)
          if [ -z "$ORIG_FILES" ]; then
            echo "Error: $ORIG_FILES not found." >&2
            echo $CURRENT_DATE "No data files to box." >> DSNdata/RUN_LOG
            exit 1
          fi
          IN_FILES=$(ls -1 DSNdata/INFLUX/*.csv 2>/dev/null || true)
          if [ -z "$IN_FILES" ]; then
            echo "Error: $IN_FILES not found." >&2
            exit 1
          fi
          influx config ls
          echo "Run influx write on $IN_FILES"
          for infile in $IN_FILES; do
            docker cp ./DSNdata/INFLUX/$infile influxdb:/tmp/intake.csv
            docker head /tmp/intake.csv
            docker exec influxdb influx write \
              --url https://us-east-1-1.aws.cloud2.influxdata.com \
              --org DSN \
              --bucket DSNdata \
              --token $INFLUX_TOKEN \
              --file /tmp/intake.csv \
              --format csv \
              --debug
          done
          echo $CURRENT_DATE $ORIG_FILES" boxed." >> DSNdata/RUN_LOG

      # Step 7: Commit files
      - name: Commit files
        env:
          INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
        run: |
          git config --local user.email "soazcomms@darksky.org"
          git config --local user.name "GitHub Action test"
          if [[ -n $(git status --porcelain) ]]; then
            git add ./DSNdata ./DSNdata/NEW ./DSNdata/INFLUX ./DSNdata/BOX 
            git commit -m "Add changes"
          else
            echo "No changes to commit"

      # Step 8: Push changes
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Trigger GitToBox Workflow
      - name: Trigger GitToBox Workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: trigger-git-to-box
