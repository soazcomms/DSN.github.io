name: Process SQM/TESS data
# Trigger the workflow on a schedule (in production mode)
on:
#  schedule:
#    - cron: '0 17 * * 0-7'  # Runs every day at 17:00 UTC
  push:
    branches:
      - main  # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libgtk-3-dev libc-bin curl
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Process SQM/TESS files
      run: |
        echo "Listing files in DSNdata/NEW"
        FILES=$(ls -1 DSNdata/NEW)
        if [ -z "$FILES" ]; then
          echo "Error: No files found." >&2
          exit 1
        fi

        echo "Run DSN_V02.py on each file:"
        for file in $FILES; do
          new_file="DSNdata/NEW/$file"
          arc_file="DSNdata/ARCHIVE/$file"
          echo "Processing $new_file"
          python3 DSN_V02.py $file"
          if [ -f $arc_file ]; then
            echo "$arc_file exists. Concatenating $new_file and $arc_file."
            cat "$new_file" >> "$arc_file"
          else
            echo "$arc_file does not exist. Moving $new_file to $arc_file."
            mv "$new_file" "$arc_file"
          fi
          if [ -f "$arc_file" ]; then
            echo "$arc_file is in place."
          else
            echo "Error: $arc_file was not created."
            exit 1
          fi
        done

    - name: Commit files # commit the INFLUX and ARCHIVE folders
      run: |
        git config --local user.email "soazcomms@darksky.org"
        git config --local user.name "GitHub Action test"
        if [[ -n $(git status --porcelain) ]]; then
          git add ./DSNdata/INFLUX ./DSNdata/ARCHIVE
          git commit -m "Add changes"
        else
          echo "No changes to commit"
        fi

    - name: Push changes # push the output folder to repo
      uses: ad-m/github-push-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Influx CLI
      run: |
        echo "Downloading and installing Influx CLI..."
        curl -sL https://dl.influxdata.com/influxdb/releases/influxdb2-client-2.7.5-linux-amd64.tar.gz -o influxdb2-client.tar.gz
        tar xvzf influxdb2-client.tar.gz
        echo "Checking if 'influx' binary exists directly after extraction:"
        if [ -f influx ]; then
          sudo mv influx /usr/local/bin/
        else
          echo "'influx' binary not found directly. Checking for extracted directory..."
          EXTRACTED_DIR=$(find . -type d -name 'influxdb2-client-*')
          if [ -d "$EXTRACTED_DIR" ]; then
            echo "Found extracted directory: $EXTRACTED_DIR"
            sudo mv "$EXTRACTED_DIR/influx" /usr/local/bin/
          else
            echo "No valid directory or binary found. Exiting with error."
            exit 1
          fi
        fi
        echo "Influx CLI installed to /usr/local/bin"
        
    - name: Start InfluxDB
      run: |
        echo "Starting InfluxDB..."
        docker run -d \
          --name influxdb \
          -p 8086:8086 \
          -e INFLUXDB_ADMIN_USER=admin \
          -e INFLUXDB_ADMIN_PASSWORD=StrongP@ssw0rd \
          -e INFLUXDB_DB=dsn \
          influxdb:2.0
        echo "Waiting for InfluxDB to be ready..."
        until curl -s http://localhost:8086/ping; do sleep 1; done
  
    - name: Set up InfluxDB
      env:
        INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
      run: |
        echo "Setting up InfluxDB..."
        docker exec influxdb influx setup --skip-verify --bucket TEST --org DSN --username admin --password StrongP@ssw0rd --token $INFLUX_TOKEN --force

    - name: Run InfluxDB Write in Docker
      env:
        INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN }}
      run: |
        echo "Listing files in $(pwd)/DSNdata/INFLUX"
        IN_FILES=$(ls -1 $(pwd)/DSNdata/INFLUX)
        if [ -z "$IN_FILES" ]; then
          echo "Error: $IN_FILES not found." >&2
          exit 1
        fi
        echo "Run influx write on " $IN_FILES
        for infile in $IN_FILES; do
          echo "*********influx write " ./DSNdata/INFLUX/$infile
          docker cp ./DSNdata/INFLUX/$infile influxdb:/tmp/intake.csv
          docker exec influxdb influx write \
            --host http://localhost:8086 \
            --org DSN \
            --bucket TEST \
            --token $INFLUX_TOKEN \
            --file /tmp/intake.csv \
            --format csv
          echo $file "written successfully."
        done
