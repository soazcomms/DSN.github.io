
name: Update DSN Data

on:
  workflow_dispatch:

jobs:
  update-dsn-data:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          echo "Installing dependencies..."
          sudo apt-get update
          sudo apt-get install -y dos2unix libc-bin curl

      - name: Install Influx CLI
        run: |
          echo "Downloading and installing Influx CLI..."
          curl -sL https://dl.influxdata.com/influxdb/releases/influxdb2-client-2.7.5-linux-amd64.tar.gz -o influxdb2-client.tar.gz
          tar xvzf influxdb2-client.tar.gz
          echo "Listing contents of current directory after extraction:"
          ls -l
          echo "Checking if 'influx' binary exists directly after extraction:"
          if [ -f influx ]; then
            sudo mv influx /usr/local/bin/
          else
            echo "'influx' binary not found directly. Checking for extracted directory..."
            EXTRACTED_DIR=$(find . -type d -name 'influxdb2-client-*')
            if [ -d "$EXTRACTED_DIR" ]; then
              echo "Found extracted directory: $EXTRACTED_DIR"
              sudo mv "$EXTRACTED_DIR/influx" /usr/local/bin/
            else
              echo "No valid directory or binary found. Exiting with error."
              exit 1
            fi
          fi
          echo "Influx CLI installed to /usr/local/bin"
          which influx
          influx version
          sudo apt-get install -y dos2unix
          
      - name: Run InfluxDB Write in Docker
        run: |
          echo "Running influx write in Docker..."
          docker run --rm -v "$(pwd):/data" influxdb:2.0 influx write \
           --url https://us-east-1-1.aws.cloud2.influxdata.com \
           --org DSN \
           --bucket TEST \
           --token ${{ secrets.INFLUX_TOKEN }} \
           --file /data/DSNdata/INFLUX/test.csv \
           --format csv \
           --errors-file /data/errors.log
          echo "Error File Contents:"
          cat errors.log || true
